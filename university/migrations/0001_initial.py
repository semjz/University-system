# Generated by Django 4.2.6 on 2023-11-12 20:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_jalali.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('authentication', '0013_alter_user_role'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('credits', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('type', models.CharField(choices=[('general', 'General'), ('specialized', 'Specialized'), ('core', 'Core'), ('optional', 'Optional')])),
                ('co_requisites', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='co_courses', to='university.course')),
                ('pre_requisites', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='post_courses', to='university.course')),
            ],
        ),
        migrations.CreateModel(
            name='DeleteTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending')])),
                ('student_comment', models.TextField()),
                ('educational_deputy_comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_condition', models.CharField(choices=[('failed', 'Failed'), ('passed', 'Passed')])),
                ('student_grade', models.IntegerField(blank=True, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='university.course')),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('units', models.IntegerField()),
                ('stage', models.CharField(choices=[('associate', 'Associate'), ('bachelor', 'Bachelor'), ('master', 'Master'), ('phd', 'PHD')])),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('expertise', models.CharField(blank=True, max_length=250, null=True)),
                ('rank', models.CharField(blank=True, choices=[('instructor', 'Instructor'), ('assistant_professor', 'Assistant Professor'), ('associate_professor', 'Associate Professor'), ('full_professor', 'Full Professor')], null=True)),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professors', to='university.major')),
                ('past_courses', models.ManyToManyField(blank=True, to='university.course')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('entrance_year', models.IntegerField()),
                ('entrance_term', models.CharField(choices=[('Mehr', 'Mehr'), ('Bahman', 'Bahman')])),
                ('military_status', models.CharField(choices=[('permanent_exemption', 'Permanent Exemption'), ('education_exemption', 'Education Exemption'), ('end_of_service', 'End of Service'), ('included', 'Included')])),
                ('courses', models.ManyToManyField(blank=True, through='university.Enrollment', to='university.course')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('take_course_start_time', django_jalali.db.models.jDateTimeField(blank=True, null=True)),
                ('take_course_end_time', django_jalali.db.models.jDateTimeField(blank=True, null=True)),
                ('class_start_time', django_jalali.db.models.jDateTimeField(blank=True, null=True)),
                ('class_end_time', django_jalali.db.models.jDateTimeField(blank=True, null=True)),
                ('fix_course_start_time', django_jalali.db.models.jDateTimeField(blank=True, null=True)),
                ('fix_course_end_time', django_jalali.db.models.jDateTimeField(blank=True, null=True)),
                ('emergency_removal_end_time', django_jalali.db.models.jDateTimeField(blank=True, null=True)),
                ('exam_start_time', django_jalali.db.models.jDateTimeField(blank=True, null=True)),
                ('term_end_time', django_jalali.db.models.jDateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TermCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_date_time', django_jalali.db.models.jDateTimeField()),
                ('exam_date_time', django_jalali.db.models.jDateTimeField()),
                ('exam_site', models.CharField()),
                ('capacity', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(250)])),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='university.course')),
                ('professors', models.ManyToManyField(to='university.professor')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.term')),
            ],
        ),
        migrations.AddField(
            model_name='term',
            name='courses',
            field=models.ManyToManyField(blank=True, through='university.TermCourse', to='university.course'),
        ),
        migrations.AddField(
            model_name='term',
            name='professors',
            field=models.ManyToManyField(blank=True, to='university.professor'),
        ),
        migrations.AddField(
            model_name='term',
            name='students',
            field=models.ManyToManyField(blank=True, to='university.student'),
        ),
        migrations.CreateModel(
            name='StudyEnrollmentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='study_enrollment_files/')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_requests', to='university.school')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_requests', to='university.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_requests', to='university.term')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='deleted_terms',
            field=models.ManyToManyField(blank=True, through='university.DeleteTerm', to='university.term'),
        ),
        migrations.AddField(
            model_name='student',
            name='major',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='university.major'),
        ),
        migrations.AddField(
            model_name='student',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='university.school'),
        ),
        migrations.AddField(
            model_name='student',
            name='supervisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='university.professor'),
        ),
        migrations.CreateModel(
            name='SelectUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending')])),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_units', to='university.student')),
                ('term_course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_units', to='university.termcourse')),
            ],
        ),
        migrations.AddField(
            model_name='professor',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professors', to='university.school'),
        ),
        migrations.AddField(
            model_name='major',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='majors', to='university.school'),
        ),
        migrations.CreateModel(
            name='ITManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GradeRevisionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision_message', models.TextField(blank=True, null=True)),
                ('revision_answer', models.TextField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_revision_requests', to='university.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_revision_requests', to='university.student')),
            ],
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='university.student'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='taken_term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='university.term'),
        ),
        migrations.CreateModel(
            name='EmergencyCourseDropRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('request_result', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending')], default='pending')),
                ('student_explanation', models.TextField(blank=True, null=True)),
                ('supervisor_explanation', models.TextField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_course_drop_request', to='university.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_course_drop_request', to='university.student')),
            ],
        ),
        migrations.AddField(
            model_name='deleteterm',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delete_terms', to='university.student'),
        ),
        migrations.AddField(
            model_name='deleteterm',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delete_terms', to='university.term'),
        ),
        migrations.AddField(
            model_name='course',
            name='schools',
            field=models.ManyToManyField(related_name='courses', to='university.school'),
        ),
        migrations.CreateModel(
            name='Assistant',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('major', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.major')),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.school')),
            ],
        ),
        migrations.CreateModel(
            name='AddAndRemove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending')])),
                ('added_term_course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_courses', to='university.termcourse')),
                ('removed_term_course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='removed_courses', to='university.termcourse')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_and_removes', to='university.student')),
            ],
        ),
    ]
